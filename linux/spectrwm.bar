#!/bin/sh


clean_up() {
    pkill -f 'ip monitor route' > /dev/null 2>&1
    [ -n "$ip_loop" ] && kill "$ip_loop"
    [ -n "$bat_loop" ] && kill "$bat_loop"
}


print_def_if() {
    local interface=$(ip route show to match 0.0.0.0 |
                      head -n 1|\
                      grep ' dev '|\
                      sed -e 's/.* dev //' -e 's/ .*//')
    [ -n "$interface" ] || return
    local if_str="$interface"
    local ip_addr=$(ifconfig "$interface"|\
                    grep "inet "|\
                    head -n 1|\
                    sed -e 's/.*inet //' -e 's/ .*//')
    local ip_str="($ip_addr)"

    local essid=$(
        iwconfig 2> /dev/null | egrep 'ESSID:".*"' | head -n 1 | \
            sed -r 's/.*ESSID:"(.+)".*/\1/'
    )

    if [ -n "$essid" ]; then
        echo "$if_str/$essid $ip_str"
    else
        echo "$if_str $ip_str"
    fi
}


print_bat() {
    which upower > /dev/null 2>&1 || return

    local bat_time=$(
        upower --dump | egrep 'time to empty:[[:space:]]*.+' | head -n 1 | \
        sed -r 's/^.*time to empty:[[:space:]]*//'
    )
    [ -n "$bat_time" ] || return

    local bat_percent=$(
        upower --dump | egrep 'percentage:[[:space:]]*[0-9]+[.%]' | head -n 1 | \
        sed -r 's/^.*percentage:[[:space:]]*([0-9]+).*/\1/'
    )
    [ -n "$bat_percent" ] || return

    echo -n "[ $bat_percent% / $bat_time ]"
}

print_status() {
    printf ' %s  %s  \n' "$(print_def_if)" "$(print_bat)"
}


trap 'clean_up' EXIT

print_status

ip monitor route | egrep --line-buffered ' via ' | while read; do
    print_status
done &
ip_loop=$!

if print_bat > /dev/null 2>&1; then
    while sleep 45; do
        print_status
    done &
    bat_loop=$!
fi 

wait
